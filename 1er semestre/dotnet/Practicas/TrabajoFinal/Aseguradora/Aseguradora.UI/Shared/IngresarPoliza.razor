@inject AgregarPolizaUseCase AgregarPolizaUseCase;
@inject ModificarPolizaUseCase ModificarPolizaUseCase;
@inject GetPolizaUseCase GetPolizaUseCase;

<div>
@if(Modificar){
    <h1>Modificar a la póliza: @_poliza.Id</h1>
}
else{
<h1>Agregar una póliza</h1>
}
<input type="number" placeholder="Valor asegurado" @bind="_poliza.ValorAsegurado">
<input type="text" placeholder="Franquicia" @bind="_poliza.Franquicia">
<input type="text" placeholder="Tipo de cobertura" @bind="_poliza.TipoDeCobertura">
<input type="date" placeholder="Fecha de inicio de la vigencia" @bind="_poliza.FechaInicioVigencia">
<input type="date" placeholder="Fecha de fin de la vigencia" @bind="_poliza.FechaFinVigencia">
<input type="number" placeholder="Id del vehículo" @bind="_poliza.VehiculoId">
<button @onclick="Cerrar">@if(Modificar){<span>Modificar</span>}else{<span>Agregar</span>}</button>
</div>

@code{
    [Parameter] public int Id {get; set;}
    [Parameter] public EventCallback CerrarDialogo{get; set;}
    [Parameter] public EventCallback OnError{get; set;}
    public string? MensajeError {get; private set; }
    public bool Modificar {get; set;} = false;
    Poliza _poliza = new Poliza();

    protected override void OnParametersSet() 
    {
        if(Id != 0){
            var polizaEcontrada = GetPolizaUseCase.Ejecutar(Id);
            if(polizaEcontrada != null)
            {
                _poliza = polizaEcontrada;
                Modificar = true;
            }
        }
    }
    void Cerrar(){
        Error error;
        if(Modificar)
        {
            error = ModificarPolizaUseCase.Ejecutar(_poliza);
        }
        else{
            error = AgregarPolizaUseCase.Ejecutar(_poliza);
        }

        if(error.Mensaje != "")
        {
            MensajeError = error.Mensaje;
            OnError.InvokeAsync();
        }
        else
        {
            CerrarDialogo.InvokeAsync();
        }
    }
}