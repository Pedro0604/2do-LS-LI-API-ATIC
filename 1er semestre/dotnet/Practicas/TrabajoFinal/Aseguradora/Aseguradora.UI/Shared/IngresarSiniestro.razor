@inject AgregarSiniestroUseCase AgregarSiniestroUseCase;
@inject ModificarSiniestroUseCase ModificarSiniestroUseCase;
@inject GetSiniestroUseCase GetSiniestroUseCase;

@if(Visible){
        <div>
        @if(_modificar){
            <h1>Modificar al siniestro: @_siniestro.Id</h1>
        }
        else{
            <h1>Agregar un siniestro</h1>
        }
        <input type="date" placeholder="Fecha de ocurrencia" min="2010-01-01" max="2023-06-19" @bind="_siniestro.FechaOcurrencia">
        <input type="text" placeholder="Dirección" @bind="_siniestro.DireccionSiniestro">
        <input type="email" placeholder="Id de la póliza" @bind="_siniestro.PolizaId">
        <textarea placeholder="Descripción" @bind="_siniestro.Descripcion"></textarea>
        <button @onclick="Cerrar">@if(_modificar){<span>Modificar</span>}else{<span>Agregar</span>}</button>
    </div>
}

@code{
    [Parameter] public int Id {get; set;}
    [Parameter] public EventCallback CerrarDialogo{get; set;}
    [Parameter] public EventCallback<string> OnError{get; set;}
    [Parameter] public bool Visible {get; set;} = false;
    public bool _modificar {get; set;} = false;
    Siniestro _siniestro = new Siniestro();

    protected override void OnParametersSet() 
    {
        _siniestro.FechaIngreso = DateTime.Now;
        _siniestro.FechaOcurrencia = new DateTime(2018, 01, 01);
        if(Id != 0){
            var _siniestro = GetSiniestroUseCase.Ejecutar(Id);
            if(_siniestro != null) _modificar = true;
        }
    }
    void Cerrar(){
        Error error;
        error = _modificar ? ModificarSiniestroUseCase.Ejecutar(_siniestro) : AgregarSiniestroUseCase.Ejecutar(_siniestro);

        if(error.Mensaje != "") OnError.InvokeAsync(error.Mensaje);
        else CerrarDialogo.InvokeAsync();
    }
}