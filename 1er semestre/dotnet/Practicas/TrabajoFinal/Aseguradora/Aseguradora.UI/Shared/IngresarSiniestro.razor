@inject AgregarSiniestroUseCase AgregarSiniestroUseCase;
@inject ModificarSiniestroUseCase ModificarSiniestroUseCase;
@inject GetSiniestroUseCase GetSiniestroUseCase;

<div>
@if(Modificar){
    <h1>Modificar al siniestro: @_siniestro.Id</h1>
}
else{
<h1>Agregar un siniestro</h1>
}
<input type="date" placeholder="Fecha de ocurrencia" @bind="_siniestro.FechaOcurrencia">
<input type="number" placeholder="Direccion del siniestro" @bind="_siniestro.DireccionSiniestro">
<input type="text" placeholder="Dirección" @bind="_siniestro.DireccionSiniestro">
<input type="email" placeholder="Id de la póliza" @bind="_siniestro.PolizaId">
<textarea placeholder="Descripción" @bind="_siniestro.Descripcion"></textarea>
<button @onclick="Cerrar">@if(Modificar){<span>Modificar</span>}else{<span>Agregar</span>}</button>
</div>

@code{
    [Parameter] public int Id {get; set;}
    [Parameter] public EventCallback CerrarDialogo{get; set;}
    [Parameter] public EventCallback OnError{get; set;}
    public string? MensajeError {get; private set; }
    public bool Modificar {get; set;} = false;
    Siniestro _siniestro = new Siniestro(true);

    protected override void OnParametersSet() 
    {
        if(Id != 0){
            var siniestroEcontrado = GetSiniestroUseCase.Ejecutar(Id);
            if(siniestroEcontrado != null)
            {
                _siniestro = siniestroEcontrado;
                Modificar = true;
            }
        }
    }
    void Cerrar(){
        Error error;
        if(Modificar)
        {
            error = ModificarSiniestroUseCase.Ejecutar(_siniestro);
        }
        else{
            error = AgregarSiniestroUseCase.Ejecutar(_siniestro);
        }

        if(error.Mensaje != "")
        {
            MensajeError = error.Mensaje;
            OnError.InvokeAsync();
        }
        else
        {
            CerrarDialogo.InvokeAsync();
        }
    }
}