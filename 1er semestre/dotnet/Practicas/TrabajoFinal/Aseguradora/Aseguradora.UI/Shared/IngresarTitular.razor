@inject AgregarTitularUseCase AgregarTitularUseCase;
@inject ModificarTitularUseCase ModificarTitularUseCase;
@inject GetTitularUseCase GetTitularUseCase;

@if(Visible){
    <div>
        @if(_modificar){
            <h1>Modificar al titular: @_nombre @_apellido</h1>
        }
        else{
        <h1>Agregar un titular</h1>
        }
        <div class="form-floating mb-3">
            <input class="form-control" type="text" id="nombre-titular" placeholder="Nombre" @bind="_titular.Nombre">
            <label for="nombre-titular" class="form-label">Nombre</label>
        </div>
        <div class="form-floating mb-3">
            <input class="form-control" type="text" id="apellido-titular" placeholder="Apellido" @bind="_titular.Apellido">
            <label for="apellido-titular" class="form-label">Apellido</label>
        </div>
        <div class="form-floating mb-3">
            <input class="form-control" type="text" id="dni-titular" placeholder="DNI" @bind="_titular.DNI" maxlength="8">
            <label for="dni-titular" class="form-label">DNI</label>
        </div>
        <div class="form-floating mb-3">
            <input class="form-control" type="text" id="direccion-titular" placeholder="Dirección" @bind="_titular.Direccion">
            <label for="direccion-titular" class="form-label">Dirección</label>
        </div>
        <div class="form-floating mb-3">
            <input class="form-control" type="tel" id="telefono-titular" placeholder="Teléfono" @bind="_titular.Telefono">
            <label for="telefono-titular" class="form-label">Teléfono</label>
        </div>
        <div class="form-floating mb-3">
            <input class="form-control" type="email" id="email-titular" placeholder="email@dotnet.com" @bind="_titular.Email">
            <label for="email-titular" class="form-label">email@dotnet.com</label>
        </div>
        <button @onclick="Cerrar" class="btn btn-success btn-ingresar">@if(_modificar){<span>Modificar</span>}else{<span>Agregar</span>}</button>
    </div>
}

@code{
    [Parameter] public int Id {get; set;}
    [Parameter] public EventCallback CerrarDialogo{get; set;}
    [Parameter] public EventCallback<string> OnError{get; set;}
    [Parameter] public bool Visible {get; set;} = false;
    bool _modificar = false;
    Titular _titular = new Titular();
    string? _nombre;
    string? _apellido;

    protected override void OnParametersSet() 
    {
        if(Id != 0){
            var _titularEncontrado = GetTitularUseCase.Ejecutar(Id);
            if(_titularEncontrado != null){
                _modificar = true;
                _titular = _titularEncontrado;
                _nombre = _titular.Nombre;
                _apellido = _titular.Apellido;
            }
        }
    }
    void Cerrar(){
        Error error = new Error();
        if(_modificar) error = ModificarTitularUseCase.Ejecutar(_titular);
        else AgregarTitularUseCase.Ejecutar(_titular);

        if(error.Mensaje != "") OnError.InvokeAsync(error.Mensaje);
        else CerrarDialogo.InvokeAsync();
    }
}