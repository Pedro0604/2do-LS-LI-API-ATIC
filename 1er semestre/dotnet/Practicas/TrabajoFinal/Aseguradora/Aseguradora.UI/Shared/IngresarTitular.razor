@inject AgregarTitularUseCase AgregarTitularUseCase;
@inject ModificarTitularUseCase ModificarTitularUseCase;
@inject GetTitularUseCase GetTitularUseCase;

@if(Visible){
    <div>
        @if(_modificar){
            <h1>Modificar al titular: @_titular.Nombre</h1>
        }
        else{
        <h1>Agregar un titular</h1>
        }
        <input type="text" placeholder="Nombre" @bind="_titular.Nombre">
        <input type="text" placeholder="Apellido" @bind="_titular.Apellido">
        <input type="number" placeholder="DNI" @bind="_titular.DNI" maxlength="8">
        <input type="text" placeholder="Dirección" @bind="_titular.Direccion">
        <input type="tel" placeholder="Teléfono" @bind="_titular.Telefono">
        <input type="email" placeholder="Email" @bind="_titular.Email">
        <button @onclick="Cerrar">@if(_modificar){<span>Modificar</span>}else{<span>Agregar</span>}</button>
    </div>
}

@code{
    [Parameter] public int Id {get; set;}
    [Parameter] public EventCallback CerrarDialogo{get; set;}
    [Parameter] public EventCallback<string> OnError{get; set;}
    [Parameter] public bool Visible {get; set;} = false;
    public bool _modificar {get; set;} = false;
    Titular _titular = new Titular();

    protected override void OnParametersSet() 
    {
        if(Id != 0){
            var _titular = GetTitularUseCase.Ejecutar(Id);
            if(_titular != null) _modificar = true;
        }
    }
    void Cerrar(){
        Error error = new Error();
        if(_modificar) error = ModificarTitularUseCase.Ejecutar(_titular);
        else AgregarTitularUseCase.Ejecutar(_titular);

        if(error.Mensaje != "") OnError.InvokeAsync(error.Mensaje);
        else CerrarDialogo.InvokeAsync();
    }
}