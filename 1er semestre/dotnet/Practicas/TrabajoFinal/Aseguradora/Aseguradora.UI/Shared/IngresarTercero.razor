@inject AgregarTerceroUseCase AgregarTerceroUseCase;
@inject ModificarTerceroUseCase ModificarTerceroUseCase;
@inject GetTerceroUseCase GetTerceroUseCase;

<div>
@if(Modificar){
    <h1>Modificar al tercero: @_tercero.Nombre</h1>
}
else{
<h1>Agregar un tercero</h1>
}
<input type="text" placeholder="Nombre" @bind="_tercero.Nombre">
<input type="text" placeholder="Apellido" @bind="_tercero.Apellido">
<input type="number" placeholder="DNI" @bind="_tercero.DNI">
<input type="text" placeholder="Nombre de la aseguradora" @bind="_tercero.NombreAseguradora">
<input type="tel" placeholder="TelÃ©fono" @bind="_tercero.Telefono">
<input type="number" placeholder="Id del siniestro" @bind="_tercero.SiniestroId">
<button @onclick="Cerrar">@if(Modificar){<span>Modificar</span>}else{<span>Agregar</span>}</button>
</div>

@code{
    [Parameter] public int Id {get; set;}
    [Parameter] public EventCallback CerrarDialogo{get; set;}
    [Parameter] public EventCallback OnError{get; set;}
    public string? MensajeError {get; private set; }
    public bool Modificar {get; set;} = false;
    Tercero _tercero = new Tercero();

    protected override void OnParametersSet() 
    {
        if(Id != 0){
            var terceroEcontrado = GetTerceroUseCase.Ejecutar(Id);
            if(terceroEcontrado != null)
            {
                _tercero = terceroEcontrado;
                Modificar = true;
            }
        }
    }
    void Cerrar(){
        Error error;
        if(Modificar)
        {
            error = ModificarTerceroUseCase.Ejecutar(_tercero);
        }
        else{
            error = AgregarTerceroUseCase.Ejecutar(_tercero);
        }

        if(error.Mensaje != "")
        {
            MensajeError = error.Mensaje;
            OnError.InvokeAsync();
        }
        else
        {
            CerrarDialogo.InvokeAsync();
        }
    }
}