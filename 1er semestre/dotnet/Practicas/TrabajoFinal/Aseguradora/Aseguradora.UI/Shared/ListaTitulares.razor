@inject ListarTitularesUseCase ListarTitularesUseCase;
@inject NavigationManager Navigator

<h1>Listado de titulares @if(ConVehiculos){<span>con sus vehículos</span>}</h1>
<button class="btn btn-primary" @onclick="()=>Ingresar(0)"><span class="oi oi-plus"></span>Agregar un titular</button>
 
<table class="table">
  <thead>
    <tr>
      <th>Id</th>
      <th>Nombre</th>
      <th>Apellido</th>
      <th>Dirección</th>
      <th>DNI</th>
      <th>Teléfono</th>
      <th>Email</th>
      @if (ConVehiculos)
      {
        <th><span class="oi oi-car"></span></th>
      }
      <th>Modificar</th>
      <th>Eliminar</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var titular in listaTitulares)
    {
      <tr>
        <td>@titular.Id</td>
        <td>@titular.Nombre</td>
        <td>@titular.Apellido</td>
        <td>@titular.Direccion</td>
        <td>@titular.DNI</td>
        <td>@titular.Telefono</td>
        <td>@titular.Email</td>
        <td><button class="btn btn-primary" @onclick="()=>Ingresar(titular.Id)"><span class="oi oi-pencil"></span></button></td>
        <td><button class="btn btn-danger" @onclick="()=>Eliminar(titular.Id)"><span class="oi oi-trash"></span></button></td>
      </tr>
      if (ConVehiculos)
      {
        
      }
    }
  </tbody>
</table>

@code {
  [Parameter] public bool ConVehiculos { get; set; } = false;
  [Parameter] public EventCallback OnEliminar { get; set; }
  List<Titular> listaTitulares = new List<Titular>(); protected override void
  OnInitialized() => listaTitulares = ListarTitularesUseCase.Ejecutar();

  void Ingresar(int id)
  {
    Navigator.NavigateTo($"/titulares/ingresar/{id}");
  }

  void Eliminar(int id)
  {
    Navigator.NavigateTo($"/titulares/eliminar/{id}");
  }
} 
